@startuml golite-component-flow
!define RECTANGLE class

title GoDev - Flujo de Componentes y Dependencias

package "Application Lifecycle" {
    [GodevStart] as start
    [Handler] as main_handler
    [ExitChan] as exit
}

package "Configuration Layer" {
    [AutoConfig] as autoconfig
    [Directory Scanning] as dir_scan
    [Logger] as logger
    [Architecture Detection] as arch_detect
    [TinyTranslator] as translator
}

package "User Interface Layer" {
    [DevTUI] as tui
    [Tab Sections] as tabs
    [Field Management] as fields
}

package "File System Layer" {
    [DevWatch] as watcher
    [FSNotify] as fsnotify
    [File Events] as file_events
    [Folder Events] as folder_events
    [Debouncing] as debounce
}

package "Compilation Layer" {
    [ServerHandler] as server_h
    [TinyWasm] as wasm_h
    [AssetMin] as assets_h
    [GoBuild] as gobuild
}

package "Runtime Layer" {
    [Internal Server] as int_server
    [External Server] as ext_server
    [GoRun] as gorun
}

package "DevBrowser Layer" {
    [DevBrowser] as browser
    [Auto Reload] as reload
}

package "External Dependencies (cdvelop)" {
    [GoBuild] as ext_gobuild
    [DevTUI] as ext_devtui
    [AssetMin] as ext_assetmin
    [TinyWasm] as ext_tinywasm
    [TinyTranslator] as ext_translator
    [MessageType] as ext_msgtype
    [TinyString] as ext_tinystring
}

package "Third-party Dependencies" {
    [ChromeDP] as ext_chromedp
    [FSNotify] as ext_fsnotify
    [YAML] as ext_yaml
}

' Initialization Flow
start --> main_handler : creates
main_handler --> autoconfig : initializes
autoconfig --> dir_scan : performs
autoconfig --> arch_detect : executes
autoconfig --> logger : uses
autoconfig --> translator : integrates

main_handler --> tui : creates
tui --> tabs : organizes
tui --> fields : displays

main_handler --> server_h : configures
main_handler --> wasm_h : configures
main_handler --> assets_h : configures
main_handler --> watcher : configures
main_handler --> browser : configures

' External Dependencies Integration
autoconfig --> ext_translator : uses
server_h --> ext_gobuild : compiles_with
wasm_h --> ext_tinywasm : engine
assets_h --> ext_assetmin : minifier

' File Watching Flow
watcher --> ext_fsnotify : uses
ext_fsnotify --> file_events : generates
ext_fsnotify --> folder_events : generates
file_events --> debounce : processed_by
folder_events --> debounce : processed_by
debounce --> server_h : .go files
debounce --> wasm_h : .wasm.go files
debounce --> assets_h : .css/.js/.html files

' Compilation Flow
server_h --> gobuild : backend compilation
wasm_h --> gobuild : wasm compilation
assets_h --> gobuild : minification

' Runtime Flow
server_h --> int_server : static files
server_h --> ext_server : custom server
server_h --> gorun : process management

' DevBrowser Flow
assets_h --> reload : triggers
wasm_h --> reload : triggers
reload --> browser : executes
browser --> ext_chromedp : controls

' Error Handling & Exit
exit --> watcher : signals
exit --> server_h : signals
exit --> browser : signals

note top of debounce : "50ms debounce\nPrevents excessive\nrecompilation"

note right of gobuild : "cdvelop/gobuild\nThread-safe builds"

note bottom of ext_assetmin : "cdvelop/assetmin\nAsset optimization"

note bottom of ext_tinywasm : "cdvelop/tinywasm\nWebAssembly engine"

note bottom of ext_gobuild : "cdvelop/gobuild\nGo compilation engine"

note bottom of ext_devtui : "cdvelop/devtui\nTerminal UI framework"

note bottom of ext_chromedp : "Third-party\nBrowser automation"

note left of autoconfig : "Zero-configuration\nDirectory structure detection\nNo YAML dependencies"

@enduml
